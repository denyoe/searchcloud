{"version":3,"sources":["components/Highlight.js","components/TextEditor/TextEditor.js","components/TextEditor/sample.js","App.js","serviceWorker.js","index.js"],"names":["Highlight","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onMouseEnter","e","preventDefault","onMouseLeave","onClick","query","children","fetchLinks","state","content","links","showTooltip","_this$props","attributes","style","backgroundColor","color","padding","cursor","react_default","a","createElement","assign","Component","initialValue","Value","fromJSON","document","nodes","object","type","leaves","text","styles","width","BASE_URL","URL","concat","URL_KWD","mapOrigins","origins","origins_array","keys","map","item","key","className","rank","target","href","link","alt","title","src","mapLinks","Results","isEmpty","isLoading","fontSize","margin","length","transformedLinks","origin","push","desc","TextEditor","schema","marks","highlight","isAtomic","decorations","renderMark","editor","next","mark","components_Highlight","keyword","setResults","plugins","markPlugin","ref","mapKeywords","keywords","toggleLoading","console","log","setState","formData","FormData","set","JSON","stringify","axios","method","url","data","config","headers","Content-Type","then","_ref","_links","catch","err","message","onChange","_ref2","value","onKeyDown","ctrlKey","toggleMark","txt","_this2","_ref3","_this3","arguments","undefined","getTexts","forEach","node","parts","split","offset","part","i","anchor","focus","Data","withoutSaving","setDecorations","slate_react_es","defaultValue","TextEditor_Results","App","TextEditor_TextEditor_TextEditor","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.782f3660.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Highlight extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            content: '',\n            links: [],\n            showTooltip: false\n        }\n    }\n\n    componentDidMount() {\n        // const { content, links } = this.props.mark.toJSON().data.keyword\n        // console.log(this.props.keyword)\n\n        const query = this.props.children.props.children\n        this.props.fetchLinks(query)\n\n        // if( this.props.keyword ) {\n        //     const { content, links } = this.props.keyword\n\n        //     this.setState({\n        //         content: content,\n        //         links: links\n        //     })\n        // }\n    }\n\n    onMouseEnter = (e) => {\n        e.preventDefault()\n\n        // this.setState({ showTooltip: true })\n    }\n\n    onMouseLeave = (e) => {\n        e.preventDefault()\n\n        // this.setState({ showTooltip: false })\n    }\n\n    onClick = (e) => {\n        e.preventDefault()\n\n        // console.log(e.target.textContent)\n        const query = this.props.children.props.children\n        this.props.fetchLinks(query)\n\n        // this.props.setResults(this.state.links)\n    }\n \n    render() {\n        const { children, attributes, color } = this.props\n\n        const style = {\n            'backgroundColor': color,\n            'color': 'black',\n            'padding': '.3em',\n            'cursor': 'pointer'\n        }\n\n        return (\n            <span onClick={this.onClick} onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave} style={style} {...{ attributes }}>{children}</span>\n        )\n    }\n}\n\nexport default Highlight","import React, { Component } from 'react';\nimport './TextEditor.css';\nimport { Editor } from 'slate-react';\nimport { Value, Data } from 'slate';\nimport Highlight from '../Highlight';\nimport { TXT2 } from './sample.js';\nimport axios from 'axios';\n\nconst initialValue = Value.fromJSON({\n    document: {\n        nodes: [\n            {\n                object: 'block',\n                type: 'paragraph',\n                nodes: [\n                    {\n                        object: 'text',\n                        leaves: [\n                            {\n                                text: TXT2\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n})\n\nconst styles = {\n    'width': '50%'\n}\n\n// const BASE_URL = 'http://127.0.0.1:8000/api'\nconst BASE_URL = 'https://searchcloud.bleek.io/apiapi'\n\nconst URL = `${BASE_URL}/search_fetch`\nconst URL_KWD = `${BASE_URL}/keywords`\n\n// const initialResults = () => {\n//     return (\n//         <div className=\"c-inital\">\n//             <h4>Google</h4>\n//             <ul>\n//                 <li><a href=\"\">link</a></li>\n//                 <li><a href=\"\">link</a></li>\n//                 <li><a href=\"\">link</a></li>\n//             </ul>\n//         </div>\n//     )\n// }\n\nconst mapLinks = (links, key) => {\n    switch (key) {\n        case 'IMAGE':\n            return (\n                <div key={key}>\n                    <h4>{ key }</h4>\n                    {/* <h4>IMAGES</h4> */}\n                    <ul>\n                        {\n                            links.map(item => {\n                                return <li className=\"borderless\" key={item.rank}><a target=\"_\" href={item.link}><img alt={item.title} src={item.link} /></a></li>\n                            })\n                        }\n                    </ul>\n                </div>\n            )\n        default: \n            return (\n                <div key={key}>\n                    <h4>{key}</h4>\n                    <ul>\n                        {\n                            links.map(item => {\n                                return <li key={item.rank}><a target=\"_\" href={item.link}>{item.title}</a></li>\n                            })\n                        }\n                    </ul>\n                </div>\n            )\n    }\n}\n\n// const printOrigin = (str) => {\n//     return <h4>{str}</h4>\n// }\n\nconst mapOrigins = (origins) => {\n    const origins_array = Object.keys(origins)\n\n    return (\n        <div>\n            {\n                origins_array.map(item => {\n                    return mapLinks(origins[item], item)\n                })\n            }\n        </div>\n    )\n}\n\nconst Results = (props) => {\n    const { links, isEmpty, isLoading } = props\n\n    if ( isLoading ) {\n        const loaderStyle = {\n            \"fontSize\": \"5em\",\n            \"margin\": \"0 170%\"\n        }\n\n        return (\n            <div className=\"c-inital\">\n                {/* Loading... */}\n                <i className=\"fas fa-circle-notch fa-spin\" style={loaderStyle}></i>\n            </div>\n        )\n    }\n\n    if( !isEmpty && links.length ) {\n        const transformedLinks = []\n\n        links.map(item => {\n            if (item.origin in transformedLinks) {\n                transformedLinks[item.origin].push({\n                    link: item.link,\n                    rank: item.rank,\n                    title: item.title,\n                    desc: item.desc\n                })\n            } else {\n                transformedLinks[item.origin] = [{\n                    link: item.link,\n                    rank: item.rank,\n                    title: item.title,\n                    desc: item.desc\n                }]\n            }\n        })\n\n        return (\n            <div className=\"c-item\">\n                {\n                    mapOrigins(transformedLinks)\n                }\n            </div>\n        )\n    }\n    \n    if ( !links.length && !isEmpty ) {\n        return (\n            <div className=\"c-inital\">\n                Select a Section and Press <em>Ctrl+H</em> to analyse\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"c-inital\">\n            Your Query Returned No Results.\n        </div>\n    )\n    \n}\n\n// const results = {\n//     keywords: [\n//         {\n//             content: 'summer\\'s lease hath',\n//             links: [\n//                 {\n//                     \"title\": \"Apple (Latin America)\",\n//                     \"link\": \"https://www.apple.com/lae/\",\n//                     \"desc\": \"Discover the innovative world of Apple and shop everything iPhone, iPad, ...\",\n//                     \"origin\": \"GOOGLE\",\n//                     \"rank\": 1\n//                 }\n//             ]\n//         },\n//         {\n//             content: 'this gives life to thee.',\n//             links: [\n//                 {\n//                     \"title\": \"Apple (Latin America)\",\n//                     \"link\": \"https://www.shmoop.com/sonnet-18/section-2-lines-9-14-summary.html\",\n//                     \"desc\": \"Discover the innovative world of Apple and shop everything iPhone, iPad, ...\",\n//                     \"origin\": \"GOOGLE\",\n//                     \"rank\": 1\n//                 },\n//                 {\n//                     \"title\": \"Brainly\",\n//                     \"link\": \"https://brainly.com/question/3697676\",\n//                     \"desc\": \"Discover the innovative world of Apple and shop everything iPhone, iPad, ...\",\n//                     \"origin\": \"GOOGLE\",\n//                     \"rank\": 2\n//                 }\n//             ]\n//         }\n//     ]\n// }\n\nexport default class TextEditor extends Component {\n\n    schema = {\n        marks: {\n            highlight: {\n                isAtomic: true,\n            },\n        },\n    }\n\n    decorations = []\n\n    renderMark = (props, editor, next) => {\n        const { children, mark, attributes } = props\n        switch (mark.type) {\n            case 'bold':\n                return <strong {...{ attributes }}>{children}</strong>\n            case 'italic':\n                return <em {...{ attributes }}>{children}</em>\n            case 'code':\n                return <code {...{ attributes }}>{children}</code>\n            case 'underline':\n                return <u {...{ attributes }}>{children}</u>\n            case 'strikethrough':\n                return <strike {...{ attributes }}>{children}</strike>\n            case 'highlight':\n                return <Highlight {...props} fetchLinks={this.fetchLinks} keyword={this.links} color=\"yellow\" setResults={this.setResults} />\n            default:\n                return next()\n        }\n    }\n\n    markPlugin() {\n        return {\n            renderMark: this.renderMark\n        }\n    }\n\n    plugins = [\n        this.markPlugin()\n    ]\n\n    /**\n     * Store a reference to the `editor`.\n     *\n     * @param {Editor} editor\n     */\n\n    ref = editor => {\n        this.editor = editor\n    }\n    \n    constructor(props) {\n        super(props)\n\n        this.state = {\n            value: initialValue,\n            isLoading: false,\n            isEmpty: false,\n            links: []\n        }\n    }\n\n    componentDidMount() {\n        // this.mapKeywords(results.keywords)\n    }\n\n    fetchKeywords(txt) {\n\n        let formData = new FormData()\n        formData.set('content', txt)\n\n        axios({\n            method: 'POST',\n            url: URL_KWD,\n            data: formData,\n            config: { headers: { 'Content-Type': 'multipart/form-data' } }\n        })\n        .then(({ data }) => {\n            console.log(data.links)\n            this.toggleLoading()\n            if (!data.links.length) {\n                this.setState({\n                    'isEmpty': true\n                })\n            } else {\n                this.setState({\n                    'isEmpty': false\n                })\n            }\n            this.setState({\n                links: data.links\n            })\n        })\n        .catch(err => console.log(err.message))\n    }\n\n    mapKeywords = (keywords) => {\n        keywords.map(keyword => {\n            this.highlight(keyword)\n        })\n    }\n\n    highlight(keyword, color = 'yellow') {\n        const { editor } = this\n        const { content } = keyword\n        // this.fetchLinks(content)\n        const { value } = editor\n        const texts = value.document.getTexts()\n        // const decorations = []\n\n        // console.log('keyword', keyword)\n\n        texts.forEach(node => {\n            const { key, text } = node\n            const parts = text.split(content)\n            let offset = 0\n\n            parts.forEach((part, i) => {\n                if (i !== 0) {\n                    this.decorations.push({\n                        anchor: { key, offset: offset - content.length },\n                        focus: { key, offset },\n                        mark: { type: 'highlight', data: Data.fromJSON({ keyword }) },\n                    })\n                }\n\n                offset = offset + part.length + content.length\n            })\n        })\n\n        // console.log(decorations, str)\n\n        editor.withoutSaving(() => {\n            editor.setDecorations(this.decorations)\n        })\n    }\n\n    toggleLoading = () => {\n        console.log('toggle loading...')\n        this.setState({\n            isLoading: !this.state.isLoading\n        })\n    }\n\n    fetchLinks = (keyword) => {\n        // axios.post(URL, {\n        //     'keywords': [keyword]\n        // }).then(data => {\n        //     this.setState({\n        //         links: data.links\n        //     })\n        //     console.log(data)\n        // })\n        // console.log('keyword', JSON.stringify([keyword]))\n\n        // this.setState({\n        //     links: []\n        // })\n\n        let formData = new FormData()\n        formData.set('keywords', JSON.stringify([keyword]))\n\n        console.log('fetching...')\n        this.toggleLoading()\n\n        axios({\n            method: 'POST',\n            url: URL,\n            data: formData,\n            config: { headers: { 'Content-Type': 'multipart/form-data' } }\n        })\n        .then(({ data }) => {\n            // const _links = JSON.parse(data.links)\n            const _links = data.links\n\n            // console.log(_links)\n\n            this.toggleLoading()\n\n            if (! _links.length ) {\n                this.setState({\n                    'isEmpty': true\n                })\n            } else {\n                this.setState({\n                    'isEmpty': false\n                })\n            }\n            this.setState({\n                links: _links\n            })\n        })\n        .catch(err => console.log(err.message))\n    }\n\n    setResults = (links) => {\n        this.setState({links})\n    }\n\n    onChange = ({ value }) => {\n        this.setState({ value })\n    }\n\n    onKeyDown = (e, editor, next) => {\n        if(! e.ctrlKey )    return next()\n        e.preventDefault()\n\n        switch (e.key) {\n            case 'b': {\n                editor.toggleMark('bold')\n                return true\n            }\n            case 'h': {\n                editor.toggleMark('highlight')\n                return true\n            }\n            default:\n                return next()\n        }\n    }\n\n    render() {\n        // let RESULTS\n        // if( this.state.results !== '' ) {\n        //     RESULTS = <initialResults />\n        // } else {\n        //     RESULTS = 'dd'\n        // }\n\n        return(\n            <div className=\"c-main\">\n                <div className=\"c-text\">\n                    <Editor\n                        plugins={this.plugins}\n                        ref={this.ref}\n                        defaultValue={this.state.value}\n                        schema={this.schema}\n                        onChange={this.onChange}\n                        onKeyDown={this.onKeyDown}\n                        styles={styles}\n                    />\n                </div>\n                <div className=\"c-results\">\n                    <Results isLoading={this.state.isLoading} isEmpty={this.state.isEmpty} links={this.state.links} />\n                </div>\n            </div>\n        )\n    }\n} ","export const TXT = `\nShall I compare thee to a summer's day? \nThou art more lovely and more temperate:\nRough winds do shake the darling buds of May,\n    And summer's lease hath all too short a date: \nSometime too hot the eye of heaven shines,\n    And often is his gold complexion dimm'd; \nAnd every fair from fair sometime declines,\n    By chance, or nature's changing course, untrimm'd;\nBut thy eternal summer shall not fade\nNor lose possession of that fair thou ow'st;\nNor shall Death brag thou wander'st in his shade,\nWhen in eternal lines to time thou grow'st; \nSo long as men can breathe or eyes can see,\n    So long lives this, and this gives life to thee. \n`\n\nexport const TXT2 = `\nHistory tells us what may happen next with Brexit & Trump\n\nIt seems we're entering another of those stupid seasons humans impose on themselves at fairly regular intervals. I am sketching out here opinions based on information, they may prove right, or may prove wrong, and they're intended just to challenge and be part of a wider dialogue.\n\nMy background is archaeology, so also history and anthropology. It leads me to look at big historical patterns. My theory is that most peoples perspective of history is limited to the experience communicated by their parents and grandparents, so 50-100 years. To go beyond that you have to read, study, and learn to untangle the propaganda that is inevitable in all telling of history. In a nutshell, at university I would fail a paper if I didn't compare at least two, if not three opposing views on a topic. Taking one telling of events as gospel doesn't wash in the comparative analytical method of research that forms the core of British academia. (I can't speak for other systems, but they're definitely not all alike in this way).\n\nSo zooming out, we humans have a habit of going into phases of mass destruction, generally self imposed to some extent or another. This handy list shows all the wars over time. Wars are actually the norm for humans, but every now and then something big comes along. I am interested in the Black Death, which devastated Europe. The opening of Boccaccio's Decameron describes Florence in the grips of the Plague. It is as beyond imagination as the Somme, Hiroshima, or the Holocaust. I mean, you quite literally can't put yourself there and imagine what it was like. For those in the midst of the Plague it must have felt like the end of the world.\n\nBut a defining feature of humans is their resilience. To us now it seems obvious that we survived the Plague, but to people at the time it must have seemed incredible that their society continued afterwards. Indeed, many takes on the effects of the Black Death are that it had a positive impact in the long term. Well summed up here: By targeting frail people of all ages, and killing them by the hundreds of thousands within an extremely short period of time, the Black Death might have represented a strong force of natural selection and removed the weakest individuals on a very broad scale within Europe, In addition, the Black Death significantly changed the social structure of some European regions. Tragic depopulation created the shortage of working people. This shortage caused wages to rise. Products prices fell too. Consequently, standards of living increased. For instance, people started to consume more food of higher quality.\n\nBut for the people living through it, as with the World Wars, Soviet Famines, Holocaust, it must have felt inconceivable that humans could rise up from it. The collapse of the Roman Empire, Black Death, Spanish Inquisition, Thirty Years War, War of the Roses, English Civil War it's a long list. Events of massive destruction from which humanity recovered and move on, often in better shape.\n\nAt a local level in time people think things are fine, then things rapidly spiral out of control until they become unstoppable, and we wreak massive destruction on ourselves. For the people living in the midst of this it is hard to see happening and hard to understand. To historians later it all makes sense and we see clearly how one thing led to another. During the Centenary of the Battle of the Somme I was struck that it was a direct outcome of the assassination of an Austrian Arch Duke in Bosnia. I very much doubt anyone at the time thought the killing of a European royal would lead to the death of 17 million people.\n\nMy point is that this is a cycle. It happens again and again, but as most people only have a 50-100 year historical perspective they don't see that it's happening again. As the events that led to the First World War unfolded, there were a few brilliant minds who started to warn that something big was wrong, that the web of treaties across Europe could lead to a war, but they were dismissed as hysterical, mad, or fools, as is always the way, and as people who worry about Putin, Brexit, and Trump are dismissed now.\n`","import React, { Component } from 'react';\nimport './App.css';\nimport TextEditor from './components/TextEditor/TextEditor';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TextEditor />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}